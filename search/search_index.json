{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Micro Simulations for Education","text":"<p>A MicroSim (or Micro-Simulation) is a simple animation or simulation program that is quickly generated to help teachers explain concepts to students.  They are designed to be generated from a brief description of a problem using generative AI tools such as ChatGPT.</p> <p>The term MicroSim was coined by Val Lockhart in the summer of 2023 while she was working with generative AI.  She found that both teachers and students could generate useful simulations using p5.js with little or no training.</p>"},{"location":"#background-on-the-processing-language","title":"Background on the Processing Language","text":"<p>p5.js is a modern version of the Processing language.</p> <p>Processing is a flexible software system and a language for learning how to code within the context of animation. It was developed by Casey Reas and Ben Fry, who were then graduate students at the MIT Media Lab. The project began in 2001 and was officially launched in 2003.  Because of its widespread adoption by the open-source community, it is now supported by the Processing Foundation.</p> <p>The key ideas behind Processing include:</p> <ol> <li> <p>Accessibility for Beginners: Processing was designed to serve as the first programming language for artists and designers. It simplifies many aspects of programming and graphics, making it more accessible and less intimidating for beginners.</p> </li> <li> <p>Focus on Visual Output: The language is geared towards creating visual output, which is appealing to artists and designers. This visual focus makes programming more engaging and understandable for those who are more visually oriented.</p> </li> <li> <p>Educational Tool: Processing is widely used as a teaching tool in universities and schools. Its simplicity and immediate visual feedback make it an excellent resource for teaching the fundamentals of programming and digital art.  Immediate visual feedback is a key feature in helping students to learn to code.</p> </li> <li> <p>Open Source and Community Driven: Processing is open-source, meaning that it's free to use and modify. This has led to a large, active community of users who contribute to its development and share their work, further enriching the tool's capabilities and resources.</p> </li> <li> <p>Extensibility and Libraries Processing is not just a language but also an integrated development environment (IDE). It supports extensibility through libraries, allowing users to expand its capabilities. These libraries can be used for a wide range of applications, from computer vision to 3D graphics, contributing to its versatility in creating simulations.</p> </li> <li> <p>Ease of Creating Simulations: Processing simplifies the process of programming graphical simulations. Its straightforward syntax and rich set of drawing functions allow users to quickly prototype and visualize complex systems. This ease of use in creating interactive graphics and simulations is one of its most appealing aspects for artists, designers, and educators.</p> </li> </ol> <p>Overall, Processing stands out for its focus on the arts and design, its ease of use, and its strong community support, all of which contribute to its popularity for creating simulations and visual arts projects.</p>"},{"location":"#the-microsim-registry","title":"The MicroSim Registry","text":"<p>One of our goals on this site is to create a library of MicroSims that can be used to fine-tune a generative AI application.  We have found that new GPTs will create higher-quality simulations if they are trained with a high-quality training set.  This reflects the fact that although there are tens of thousands of sample p5.js animations, many of them are created by first-time programmers.</p> <p>Although it is easy for a non-programmer to use generative AI to create a new MicroSim, it is more difficult to fine high-quality MicroSims that have been peer-reviewed by senior software developers and user experience designers.  These MicroSims have some of the following qualities:</p> <ol> <li>Clearly labeled controls with values.</li> <li>Controls placed at the bottom of the simulation</li> <li> <p>Controls aligned for visual asthetics</p> </li> <li> <p>Bouncing Ball</p> </li> <li>String Harmonics</li> </ol>"},{"location":"about/","title":"About the Micro Simulations Website","text":""},{"location":"about/#history-of-processing","title":"History of Processing","text":"<p>Processing is a free, open-source coding language for visual art developed by Ben Fry and Casey Reas, former classmates at the MIT Media Lab. Launched in 2001 as Proce55ing, the project encompasses a programming environment designed for artists\u2019 use, and a community of practitioners.</p>"},{"location":"about/#p5js","title":"P5.js","text":""},{"location":"about/#references","title":"References","text":"<p>The Processing Foundation</p>"},{"location":"contact/","title":"Contact","text":"<p>Dan McCreary on LinkedIn</p>"},{"location":"setup/02-system-prompt/","title":"Setting up a System Prompt","text":""},{"location":"setup/03-sound-test/","title":"Sound Test","text":"<p>Make sure you add the following line to your .html file:</p> <pre><code>    &lt;script src=\"../js/p5.sound.min.js\"&gt;&lt;/script&gt;\n</code></pre> <p>The line can be place right after the loading of the p5.js library in the html head section.</p> <pre><code>&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;String Harmonics&lt;/title&gt;\n    &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../js/p5.sound.min.js\"&gt;&lt;/script&gt;\n</code></pre> <p>We suggest having the default mode of a sim have the sound off.  Add a button to turn the sound on.</p>"},{"location":"setup/04-structure/","title":"Structure of a MicroSim Demonstration","text":"<p>To make it easier for developers to understand and reuse our MicroSims, we are proposing the following directory and file standards.</p>"},{"location":"setup/04-structure/#required-components","title":"Required Components","text":"<ol> <li>Directory with the name of the app</li> <li>index.md file within this directory.  The index.md file has a link the HTML file.</li> <li>HTML file that displays the application.  It also loads the JavaScript file and provides a link back to the main index.md file.</li> <li>JavaScript file that holds the simulation code.  </li> </ol>"},{"location":"setup/04-structure/#optional-components","title":"Optional Components","text":"<ol> <li>An image of the working simulation.</li> <li>A sample set of one or more prompts that were used to generate the simulation.</li> <li>Sample of code that was generated</li> <li>Related simulations</li> </ol>"},{"location":"sims/bouncing-ball/01-bounce/","title":"Bouncing Ball","text":""},{"location":"sims/recursion-tree/","title":"Recursion Tree","text":"<p>Recursion trees are ideal ways to demonstrate recursive programming. In a recursive program, a function calls itself repeatedly. The result is often a beautiful complex image generated from a very small program.</p>"},{"location":"sims/recursion-tree/#prompt","title":"Prompt","text":"<pre><code>Generate a single file p5.js sketch on a 400x400 canvas.\nGenerate a drawing of a tree that uses recursion.\nAdd a slider that changes the angle between the branches of the tree.\n</code></pre>"},{"location":"sims/recursion-tree/#response","title":"Response","text":"<pre><code>let angleSlider;\n\nfunction setup() {\nconst canvas = createCanvas(400, 400);\ncanvas.parent('canvas-container');\nangleSlider = createSlider(0, TWO_PI, PI / 4, 0.01);\nangleSlider.position(10, height + 10);\n}\n\nfunction draw() {\nbackground(255);\nstroke(0);\ntranslate(width / 2, height);\ndrawBranch(100);\n}\n\nfunction drawBranch(len) {\nline(0, 0, 0, -len);\ntranslate(0, -len);\n\nif (len &gt; 4) {\npush();\nrotate(angleSlider.value());\ndrawBranch(len * 0.67);\npop();\n\npush();\nrotate(-angleSlider.value());\ndrawBranch(len * 0.67);\npop();\n}\n}\n</code></pre>"},{"location":"sims/string-harmonics/string-harmonics/","title":"String Harmonics","text":"<p>Contributed by Shawn McBurnie.</p> <p></p> <ul> <li>String Harmonics Demo No Sound</li> <li>String Harmonics Demo With Sound</li> </ul>"},{"location":"sims/string-harmonics/string-harmonics/#sample-prompt","title":"Sample Prompt","text":"<pre><code>Create a single file p5.js sketch on a canvas of width=800 and height=200.\nGenerate a demonstration of string harmonics.\nAllow the string to vary from a frequency of 1 to 16 wave forms.\nAdd a slider that changes the frequency with a step of .1.\nAdd two small black circles at the endpoints of the wave.\nIndent the endpoints with a margin of 20 points from the edges.\nAdd a label and value to the left of the slider.\n</code></pre>"},{"location":"sims/string-harmonics/string-harmonics/#lesson-plan-exploring-string-harmonics-with-interactive-simulation","title":"Lesson Plan: Exploring String Harmonics with Interactive Simulation","text":""},{"location":"sims/string-harmonics/string-harmonics/#objective","title":"Objective","text":"<ul> <li>Understand the concept of string harmonics and how frequency affects sound pitch.</li> </ul>"},{"location":"sims/string-harmonics/string-harmonics/#grade-level","title":"Grade Level","text":"<ul> <li>9th Grade</li> </ul>"},{"location":"sims/string-harmonics/string-harmonics/#subject","title":"Subject","text":"<ul> <li>Physics (Sound and Waves)</li> </ul>"},{"location":"sims/string-harmonics/string-harmonics/#materials-needed","title":"Materials Needed","text":"<ul> <li>Computers with internet access</li> <li>Access to the string harmonics simulation String Harmonics Simulation</li> <li>Notebooks and pens for taking notes</li> </ul>"},{"location":"sims/string-harmonics/string-harmonics/#duration","title":"Duration","text":"<ul> <li>1 Class Period (45-60 minutes)</li> </ul>"},{"location":"sims/string-harmonics/string-harmonics/#introduction-10-minutes","title":"Introduction (10 minutes)","text":"<ul> <li>Brief Lecture: Introduce the concept of harmonics in strings, explaining how vibrations at different frequencies produce different sounds.</li> <li>Demonstration: Show a real-world example, like a guitar string, and discuss how varying the tension changes the sound.</li> </ul>"},{"location":"sims/string-harmonics/string-harmonics/#interactive-session-20-minutes","title":"Interactive Session (20 minutes)","text":"<ul> <li>Hands-On Activity: Students explore the string harmonics simulation. They are encouraged to adjust the frequency slider and observe changes in wave patterns and listen to the pitch changes.</li> <li>Guided Questions: As they explore, ask questions like, \"What happens to the wave as you increase the frequency?\" or \"How does the change in frequency affect the sound you hear?\"</li> </ul>"},{"location":"sims/string-harmonics/string-harmonics/#group-discussion-10-minutes","title":"Group Discussion (10 minutes)","text":"<ul> <li>Sharing Observations: Students discuss their findings in small groups, focusing on the relationship between frequency, wave pattern, and pitch.</li> <li>Connecting Theory and Practice: Discuss how this simulation relates to real-life instruments and sound production.</li> </ul>"},{"location":"sims/string-harmonics/string-harmonics/#application-activity-10-minutes","title":"Application Activity (10 minutes)","text":"<ul> <li>Creative Exploration: Ask students to imagine and sketch a new musical instrument that uses the principles of string harmonics.</li> <li>Discussion: Share ideas within the class, discussing the feasibility and creativity of the designs.</li> </ul>"},{"location":"sims/string-harmonics/string-harmonics/#conclusion-5-minutes","title":"Conclusion (5 minutes)","text":"<ul> <li>Recap: Summarize key concepts learned about harmonics, frequency, and sound production.</li> <li>Homework Assignment: Students write a brief report on how understanding string harmonics is essential in designing musical instruments.</li> </ul>"},{"location":"sims/string-harmonics/string-harmonics/#assessment","title":"Assessment","text":"<ul> <li>Participation in the interactive session and group discussion.</li> <li>Quality and creativity of the musical instrument design.</li> <li>Understanding demonstrated in the homework report.</li> </ul>"},{"location":"sims/string-harmonics/string-harmonics/#a-story-about-this-microsim","title":"A Story about this MicroSim","text":"<p>I met Shawn at a ChatGPT meetup and I gave him a short demo of MicroSims.  The meetup was over lunch.  By supper time he had already finished his first MicroSim, despite never having used Processing before.  AND he figured out how to get sound working.  WOW!</p>"}]}